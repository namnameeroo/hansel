.break {
  word-break: break-all;
  word-break: break-word;
}

.img {
  object-fit: cover;
  height: 100%;
  width: 100%;
}

.layoutBox {
  /* background-color: var(--bg-color); */
  background-color: red;
}

/*
  Initial layout for the mobile view of the component 
*/

.container {
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: repeat(2, min-content);
  gap: 1.2rem;
  grid-auto-flow: row;
  grid-template-areas:
    "left"
    "center"
    "right";

  padding-bottom: 10px;
  width: 100%;
  margin-right: auto;
  margin-left: auto;
}
@media (min-width: 1024px) {
  .container {
    padding-top: 2.25rem;
  }
}
@media (min-width: 1320px) {
  .container {
    max-width: 1320px;
  }
}
@media (min-width: 1920px) {
  .container {
    max-width: 1920px;
  }
}
.left {
  grid-area: left;
}
.right {
  grid-area: right;
}
.center {
  grid-area: center;
}

@media (min-width: 1024px) {
  .container {
    grid-template-columns: repeat(14, minmax(0, 1fr));
  }

  .left {
    grid-area: left;
    /* left 라는 이름으로 template area 설정 */
  }
  .right {
    grid-area: right;
    /* right 라는 이름으로 template area 설정 */
  }
  .center {
    grid-area: center;
    /* center 라는 이름으로 template area 설정 */
  }

  /* // there are two versions for the layout on desktop - version-a and version-b */
  .versionA {
    grid-template-areas:
      "left left left left . center center center center center right right right right"
      "left left left left . center center center center center right right right right";
  }
}

/* @media (min-width: 1700px) {
  .versionA {
    grid-template-areas:
      "left left left left left left . center center center center right right right right"
      "left left left left left left . center center center center right right right right";
  }
} */

.grid {
  display: grid;
}

.imageGrid3M4 {
  grid-template-rows: repeat(7, 1fr);
  grid-template-columns: repeat(14, 1fr);
  gap: 0.5rem;

  .image0 {
    grid-column: 1 / span 6;
    grid-row: 1 / span 4;
  }
  .image1 {
    grid-column: 7 / span 6;
    grid-row: 2 / span 2;

    aspect-ratio: 1/1;
  }
  .image2 {
    grid-column: 1 / span 6;
    grid-row: 5 / span 2;

    padding-left: 1rem;
  }
  .image3 {
    grid-column: 7 / span 8;
    grid-row: 4 / span 4;
  }
}
@media (min-width: 1024px) {
  .imageGrid3M4 {
    grid-template-rows: repeat(11, 63px);
    grid-template-columns: repeat(8, minmax(0, 1fr));
    row-gap: 1rem;

    .image0 {
      grid-column: 1 / span 4;
      grid-row: 1 / span 8;
    }

    .image1 {
      grid-column: 5 / span 4;
      grid-row: 2 / span 5;

      padding-right: 45px;
    }
    .image2 {
      grid-column: 2 / span 3;
      grid-row: 9 / span 3;

      padding-left: 0;
    }
    .image3 {
      display: none;
    }
  }
}
/* // grid for the part with 4 images on desktop and  mobile */
.imageG4 {
  grid-template-rows: repeat(12, 1fr);
  grid-template-columns: repeat(12, 1fr);
  gap: 0.5rem;

  .image0 {
    grid-column: 1 / span 7;
    grid-row: 1 / span 6;
  }
  .image1 {
    grid-column: 7 / span 5;
    grid-row: 3 / span 5;

    padding-right: 10px;
  }

  .image2 {
    grid-column: 1 / span 6;
    grid-row: 7 / span 5;

    padding-left: 2rem;
  }
  .image3 {
    grid-column: 7 / span 5;
    grid-row: 8 / span 5;
  }
  &.imageG4LeftTop {
    .image0 {
      z-index: 10;
    }
  }
}
@media (min-width: 1024px) {
  .imageGrid4 {
    grid-template-rows: repeat(11, 73px);
    grid-template-columns: repeat(8, minmax(0, 1fr));
    row-gap: 1rem;
    column-gap: 1rem;

    .image0 {
      grid-column: 1 / span 6;
      grid-row: 1 / span 5;

      margin-left: -45px;
      padding-right: 45px;
    }
    .image1 {
      grid-column: 6 / span 3;
      grid-row: 3 / span 4;

      padding-right: 0;
    }

    .image2 {
      grid-column: 1 / span 5;
      grid-row: 6 / span 4;
      padding-left: 45px;
    }
    .image3 {
      grid-column: 6 / span 3;
      grid-row: 7 / span 4;

      padding-right: 45px;
    }
  }
}
